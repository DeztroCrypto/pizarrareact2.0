[{"D:\\GitHub\\pizarrareact2.0\\client\\src\\index.js":"1","D:\\GitHub\\pizarrareact2.0\\client\\src\\App.js":"2","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Funciones.js":"3","D:\\GitHub\\pizarrareact2.0\\client\\src\\DrawingCanvas.js":"4","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Herramientas.js":"5","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Grosor.js":"6","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Colores.js":"7","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_CRUD.js":"8","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Figuras.js":"9","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Opcion.js":"10","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Herramienta.js":"11","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Color.js":"12","D:\\GitHub\\pizarrareact2.0\\client\\src\\imagenes.js":"13","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Figura.js":"14"},{"size":422,"mtime":1671208728923,"results":"15","hashOfConfig":"16"},{"size":18186,"mtime":1671175964603,"results":"17","hashOfConfig":"16"},{"size":1401,"mtime":1671175964604,"results":"18","hashOfConfig":"16"},{"size":11509,"mtime":1671175964606,"results":"19","hashOfConfig":"16"},{"size":655,"mtime":1671175964605,"results":"20","hashOfConfig":"16"},{"size":540,"mtime":1671175964605,"results":"21","hashOfConfig":"16"},{"size":1196,"mtime":1671175964604,"results":"22","hashOfConfig":"16"},{"size":488,"mtime":1671175964603,"results":"23","hashOfConfig":"16"},{"size":765,"mtime":1671175964604,"results":"24","hashOfConfig":"16"},{"size":282,"mtime":1671175964606,"results":"25","hashOfConfig":"16"},{"size":364,"mtime":1671175964606,"results":"26","hashOfConfig":"16"},{"size":264,"mtime":1671175964605,"results":"27","hashOfConfig":"16"},{"size":714,"mtime":1669607430015,"results":"28","hashOfConfig":"16"},{"size":298,"mtime":1671175964605,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"1bsc8ar",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":3,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\pizarrareact2.0\\client\\src\\index.js",["84"],[],"import userEvent from '@testing-library/user-event'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './styles.css'\r\nimport io from 'socket.io-client'\r\nconst rootElement = ReactDOM.createRoot(document.getElementById('root'))\r\n\r\nconst socket = io()\r\n//const socket = io('http://localhost:3001')\r\n\r\nrootElement.render(\r\n    <>\r\n        <App socket = {socket}/>\r\n    </>\r\n)","D:\\GitHub\\pizarrareact2.0\\client\\src\\App.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],"import React, { useState } from \"react\";\r\nimport DrawingCanvas, { subir_imagen } from \"./DrawingCanvas\";\r\nimport { obtenerId } from \"./DrawingCanvas\";\r\nimport Barra_Herramientas from \"./Barra_Herramientas\";\r\nimport Barra_Colores from \"./Barra_Colores\"\r\nimport Barra_Grosor from \"./Barra_Grosor\";\r\nimport Barra_Funciones from \"./Barra_Funciones\";\r\nimport \"./styles.css\"\r\nimport \"./w3.css\"\r\nimport Barra_Figuras from \"./Barra_Figuras\";\r\nimport { useEffect } from \"react\";\r\nimport Barra_CRUD from \"./Barra_CRUD\";\r\n\r\nconst indexedDB =\r\n  window.indexedDB ||\r\n  window.mozIndexedDB ||\r\n  window.webkitIndexedDB ||\r\n  window.msIndexedDB ||\r\n  window.shimIndexedDB;\r\n\r\nconst crearBaseDeDatos = () => {\r\n  if (!indexedDB) {\r\n    console.log(\"IndexedDB no soportado\")\r\n    return\r\n  }\r\n  const request = indexedDB.open(\"Pizarra-DB\", 1)\r\n  request.onsuccess = () => {\r\n    const bd = request.result\r\n  }\r\n\r\n  request.onupgradeneeded = () => {\r\n    const bd = request.result\r\n    bd.createObjectStore(\"lienzosGuardados\", { keyPath: \"nombre\" })\r\n  }\r\n  request.onerror = (e) => {\r\n    console.log(\"Error\", e)\r\n    console.log(\"An error occurred with IndexedDB\")\r\n  }\r\n}\r\nvar actuImg\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    crearBaseDeDatos()\r\n    leerLienzos()\r\n  }, [])\r\n  const socket = props.socket\r\n  const [figura, setFigura] = useState(\"linea\")\r\n  const [colorAct, setColor] = useState(\"black\")\r\n  const [grosorAct, setGrosor] = useState(3)\r\n  const [img, setImg] = useState(null)\r\n  const [newImg, setnewImg] = useState(null)\r\n  const [newWidth, setWidth] = useState(200)\r\n  const [newHeight, setHeight] = useState(200)\r\n  const [deshabilitado, setDeshabilitado] = useState(true)\r\n  const [listaUsuarios, setListaUsuarios] = useState(null)\r\n  useEffect(() => {\r\n    leerLienzos()\r\n  }, [deshabilitado])\r\n  const cambiar_color = (element) => {\r\n    setColor(element.target.value)\r\n  }\r\n\r\n  const cambiar_grosor = (element) => {\r\n    setGrosor(element.target.value)\r\n  }\r\n\r\n  const cambiar_lapiz = () => {\r\n    setFigura(\"linea\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const cambiar_borrador = () => {\r\n    setFigura(\"linea\")\r\n    setColor(\"#ffffff\")\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const dibujarCuadrado = () => {\r\n    setFigura(\"cuadrado\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n\r\n  const dibujarTriangulo = () => {\r\n    setFigura(\"triangulo\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n\r\n  const dibujarCirculo = () => {\r\n    setFigura(\"circulo\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const guardarLienzo = () => {\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      let ingresoTexto = document.getElementById(\"ingresoNombreLienzo\")\r\n      if (ingresoTexto.value) {\r\n        const transaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n        const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n        const canvas = document.getElementById('pizarra')\r\n        var image = canvas.toDataURL();\r\n        var nombre = ingresoTexto.value\r\n\r\n        const transactionRead = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n        const lienzoRead = transactionRead.objectStore(\"lienzosGuardados\")\r\n        const requestRead = lienzoRead.get(nombre)\r\n        requestRead.onsuccess = () => {\r\n          const newtransaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n          const newlienzoStore = newtransaction.objectStore(\"lienzosGuardados\")\r\n          if (requestRead.result) {\r\n            const requestAdd = newlienzoStore.put({\r\n              nombre,\r\n              image\r\n            })\r\n            alert(`Lienzo ${nombre} actualizado`)\r\n            ingresoTexto.value = \"\"\r\n          } else {\r\n            const requestAdd = newlienzoStore.add({\r\n              nombre,\r\n              image\r\n            })\r\n            alert(`Lienzo guardado con el nombre ${ingresoTexto.value}`)\r\n            ingresoTexto.value = \"\"\r\n          }\r\n          leerLienzos()\r\n        }\r\n\r\n      } else {\r\n        alert(\"Ingrese un nombre al lienzo porfavor\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const leerLienzos = () => {\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const lienzos = document.getElementById(\"lienzos\")\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.openCursor()\r\n      const fragment = document.createDocumentFragment()\r\n\r\n      request.onsuccess = (e) => {\r\n        const cursor = e.target.result\r\n        if (cursor) {\r\n          const img = document.createElement(\"img\")\r\n          const nombrePizarra = document.createElement(\"label\")\r\n          img.src = cursor.value.image\r\n          img.id = \"lienzoGuardado\"\r\n          nombrePizarra.innerHTML = cursor.value.nombre\r\n          const elementoLienzo = document.createElement(\"div\")\r\n          elementoLienzo.id = \"elementoLienzo\"\r\n          elementoLienzo.appendChild(nombrePizarra)\r\n          elementoLienzo.appendChild(img)\r\n          const divBotones = document.createElement(\"div\")\r\n          divBotones.id = \"botonesLienzoGuardado\"\r\n          const botonActualizar = document.createElement(\"button\")\r\n          botonActualizar.textContent = \"Cargar\"\r\n          botonActualizar.id = \"botonCRUD\"\r\n          botonActualizar.className = \"botonCRUD\"\r\n          botonActualizar.onclick = cargarLienzo\r\n          botonActualizar.id = \"botonCRUD\"\r\n          botonActualizar.dataset.nombre = cursor.value.nombre\r\n          divBotones.appendChild(botonActualizar)\r\n          const botonEliminar = document.createElement(\"button\")\r\n          botonEliminar.textContent = \"Eliminar\"\r\n          botonEliminar.id = \"botonCRUD\"\r\n          botonEliminar.className = \"botonCRUD\"\r\n          botonEliminar.onclick = eliminarLienzo\r\n          botonEliminar.dataset.nombre = cursor.value.nombre\r\n          divBotones.appendChild(botonEliminar)\r\n          if (deshabilitado) {\r\n            botonActualizar.disabled = true\r\n            botonEliminar.disabled = true\r\n          }\r\n          elementoLienzo.appendChild(divBotones)\r\n          fragment.appendChild(elementoLienzo)\r\n          cursor.continue()\r\n        } else {\r\n          lienzos.textContent = \"\"\r\n          lienzos.appendChild(fragment)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const cargarLienzo = (e) => {\r\n    const key = e.target.dataset.nombre\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.get(key)\r\n      request.onsuccess = () => {\r\n        socketCargarLienzo(request.result.image,true)\r\n        document.getElementById(\"ingresoNombreLienzo\").value = request.result.nombre\r\n        cambiar_lapiz()\r\n      }\r\n    }\r\n  }\r\n\r\n  function cargarLienzoSocket(data){\r\n      socketCargarLienzo(data.lienzo)\r\n  }\r\n\r\n  const socketCargarLienzo = (lienzo,emit) => {\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext(\"2d\")\r\n    const imagen = new Image\r\n    imagen.onload = () => {\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n      context.drawImage(imagen, 0, 0)\r\n      const imgData = canvas.toDataURL()\r\n      if(!emit){\r\n        return\r\n      }\r\n      socket.emit('cargarLienzo',{\r\n        lienzo,\r\n        imgData\r\n      })\r\n    }\r\n    imagen.src = lienzo\r\n  }\r\n\r\n  const eliminarLienzo = (e) => {\r\n    const key = e.target.dataset.nombre\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.delete(key)\r\n      request.onsuccess = () => {\r\n        leerLienzos()\r\n        alert(`El lienzo ${key} se eliminará`)\r\n      }\r\n    }\r\n  }\r\n\r\n  //////\r\n  socket.on('subirImagen', subirImagen)\r\n  socket.on('redimensionarImagen', redimensionarImagen)\r\n  socket.on('cargarLienzo',cargarLienzoSocket)\r\n  socket.on('limpiarPizarra', limpiarPizarra)\r\n  socket.on('envioUsuariosActuales', recargarListaUsuarios)\r\n  socket.on('actualizarLista', recargarListaUsuarios)\r\n  socket.on('levantarMano', levantarManoUsuario)\r\n  socket.on('bajarMano', bajarManoUsuario)\r\n  socket.on('brindarEdicionUsuarioHabilitado', habilitarEdicion)\r\n  socket.on('pasarEdicion', pasarEdicionUsuario)\r\n  /////\r\n\r\n  function habilitarEdicion(data) {\r\n    if (data.usuarioHabilitadoDibujar === socket.id) {\r\n      setDeshabilitado(false)\r\n    }\r\n  }\r\n\r\n  function recargarListaUsuarios(data) {\r\n    const fragment = document.createDocumentFragment()\r\n    const sectorUsuarios = document.getElementById(\"sectorListaUsuarios\")\r\n    sectorUsuarios.innerHTML = \"\"\r\n    let listaUsuarios = data.lista\r\n    setListaUsuarios(listaUsuarios)\r\n    for (let indice in listaUsuarios) {\r\n      const divUsuario = document.createElement(\"div\")\r\n      divUsuario.className = \"usuario\"\r\n      const labelUsuario = document.createElement(\"label\")\r\n      labelUsuario.innerHTML = listaUsuarios[indice].nombre\r\n      if(socket.id === listaUsuarios[indice].id){\r\n        labelUsuario.style.textDecoration = \"underline\"\r\n        labelUsuario.style.fontWeight = \"bold\"\r\n      }\r\n      const botonPasarEdicion = document.createElement(\"button\")\r\n      botonPasarEdicion.textContent = \"Pasar lápiz\"\r\n      botonPasarEdicion.className = \"botonUsuario\"\r\n      botonPasarEdicion.id = listaUsuarios[indice].id\r\n      botonPasarEdicion.onclick = pasarEdicion\r\n      botonPasarEdicion.dataset.id = listaUsuarios[indice].id\r\n      botonPasarEdicion.style.visibility = \"hidden\"\r\n\r\n      divUsuario.appendChild(labelUsuario)\r\n      divUsuario.appendChild(botonPasarEdicion)\r\n      fragment.appendChild(divUsuario)\r\n    }\r\n    sectorUsuarios.appendChild(fragment)\r\n    if (!data.emit) {\r\n      return\r\n    }\r\n    socket.emit('ingresoUsuario', { lista: listaUsuarios })\r\n  }\r\n\r\n  const pasarEdicion = (event) => {\r\n    const idNuevoUsuarioHabilitado = event.target.dataset.id\r\n    if (socket.id !== idNuevoUsuarioHabilitado) {\r\n      setDeshabilitado(true)\r\n      socketPasarEdicion(idNuevoUsuarioHabilitado, true)\r\n    }else{\r\n      alert(\"No tienes permiso para hacer eso\")\r\n    }\r\n  }\r\n\r\n  function pasarEdicionUsuario(data) {\r\n    socketPasarEdicion(data.id)\r\n  }\r\n\r\n  const socketPasarEdicion = (id, emit) => {\r\n    if (socket.id === id) {\r\n      setDeshabilitado(false)\r\n    }\r\n    if (!emit) {\r\n      return\r\n    }\r\n    socket.emit('pasarEdicion', {\r\n      id\r\n    })\r\n  }\r\n\r\n  const levantarMano = () => {\r\n    const botonLevantarMano = document.getElementById(\"botonLevantarMano\")\r\n    botonLevantarMano.style.visibility = \"hidden\"\r\n    const botonBajarMano = document.getElementById(\"botonBajarMano\")\r\n    botonBajarMano.style.visibility = \"visible\"\r\n    socketLevantarMano(socket.id, true)\r\n  }\r\n\r\n  function levantarManoUsuario(data) {\r\n    socketLevantarMano(data.id)\r\n  }\r\n\r\n  const socketLevantarMano = (id, emit) => {\r\n    const botonRespectivoUsuario = document.getElementById(id)\r\n    botonRespectivoUsuario.style.visibility = \"visible\"\r\n    if (!emit) {\r\n      return\r\n    }\r\n    socket.emit('levantarMano', {\r\n      id\r\n    })\r\n  }\r\n\r\n  const bajarMano = () => {\r\n    const botonBajarMano = document.getElementById(\"botonBajarMano\")\r\n    botonBajarMano.style.visibility = \"hidden\"\r\n    const botonLevantarMano = document.getElementById(\"botonLevantarMano\")\r\n    botonLevantarMano.style.visibility = \"visible\"\r\n    socketBajarMano(socket.id, true)\r\n  }\r\n\r\n  function bajarManoUsuario(data) {\r\n    socketBajarMano(data.id)\r\n  }\r\n\r\n  const socketBajarMano = (id, emit) => {\r\n    const botonRespectivoUsuario = document.getElementById(id)\r\n    botonRespectivoUsuario.style.visibility = \"hidden\"\r\n    if (!emit) {\r\n      return\r\n    }\r\n    socket.emit('bajarMano', {\r\n      id\r\n    })\r\n  }\r\n\r\n  function limpiarPizarra() {\r\n    socketLimpiarPizarra()\r\n  }\r\n\r\n  const limpiar_pizarra = () => {\r\n    socketLimpiarPizarra(true)\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const socketLimpiarPizarra = (emit) => {\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    let imgData = canvas.toDataURL()\r\n    if (!emit) {\r\n      return\r\n    }\r\n    socket.emit('limpiarPizarra', {\r\n      imgData\r\n    })\r\n  }\r\n\r\n  const subir_imagen = () => {\r\n    const file = document.querySelector('#inp').files[0]\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext('2d')\r\n    actuImg = canvas.toDataURL()\r\n    setnewImg(actuImg)\r\n\r\n    setWidth(200)\r\n    setHeight(200)\r\n    const src = URL.createObjectURL(file)\r\n    setImg(src)\r\n    socketSubirImagen(src, newWidth, newHeight, true)\r\n    setFigura('img')\r\n    document.querySelector('#inp').addEventListener('onchange', function (e) {\r\n      e.currentTarget.files = null;\r\n    })\r\n  }\r\n\r\n  const socketSubirImagen = (src, newWidth, newHeight, emit) => {\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext('2d')\r\n    let img = document.createElement('img')\r\n    var imgData\r\n    img.id = 'imgSub'\r\n    img.src = src\r\n    img.onload = () => {\r\n      context.drawImage(img, 0, 0, newWidth, newHeight)\r\n      document.getElementById(\"resize\").style.display = \"block\";\r\n      imgData = canvas.toDataURL()\r\n      if (!emit) {\r\n        return\r\n      }\r\n      socket.emit('subirImagen', {\r\n        src,\r\n        newWidth,\r\n        newHeight,\r\n        imgData\r\n      })\r\n    }\r\n  }\r\n  function subirImagen(data) {\r\n    socketSubirImagen(data.src, data.newWidth, data.newHeight)\r\n  }\r\n\r\n  const downloadImg = () => {\r\n    let enlace = document.createElement('a')\r\n    enlace.download = \"lienzo.png\"\r\n    const canvas = document.getElementById('pizarra')\r\n\r\n    enlace.href = canvas.toDataURL();\r\n    enlace.click();\r\n  }\r\n\r\n\r\n  const resizeImg = () => {\r\n    const file = document.querySelector('input[type=file]').files[0]\r\n    const src = URL.createObjectURL(file)\r\n    const widthImg = document.getElementById('w').value\r\n    const heightImg = document.getElementById('h').value\r\n    setWidth(widthImg)\r\n    setHeight(heightImg)\r\n    socketResizeImg(src, widthImg, heightImg, actuImg, true)\r\n    setFigura('img')\r\n  }\r\n\r\n  function redimensionarImagen(data) {\r\n    socketResizeImg(data.src, data.newWidth, data.newHeight, data.actuImg)\r\n  }\r\n\r\n  const socketResizeImg = (src, newWidth, newHeight, actuImg, emit) => {\r\n    let img = new Image\r\n    let BGImg = new Image\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext('2d')\r\n    BGImg.src = actuImg\r\n    img.src = src\r\n    img.id = 'imgSub'\r\n    var imgData\r\n    BGImg.onload = () => {\r\n      context.clearRect(0, 0, canvas.width, canvas.height)\r\n      context.drawImage(BGImg, 0, 0)\r\n    }\r\n    img.onload = () => {\r\n      context.drawImage(img, 0, 0, newWidth, newHeight)\r\n      imgData = canvas.toDataURL()\r\n      if (!emit) {\r\n        return\r\n      }\r\n      socket.emit('redimensionarImagen', {\r\n        src,\r\n        newWidth,\r\n        newHeight,\r\n        actuImg,\r\n        imgData\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return <>\r\n    <div className=\"principal\">\r\n      <div className=\"w3-col guardado\">\r\n        <div>\r\n          <Barra_CRUD funcionGuardarLienzo={guardarLienzo} funcionCargarLienzo={cargarLienzo} deshabilitado={deshabilitado} />\r\n        </div>\r\n        <div id=\"contenedorLienzos\">\r\n          <div id=\"lienzos\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w3-col pizarra\">\r\n        <DrawingCanvas\r\n          color={colorAct}\r\n          grosor={grosorAct}\r\n          figura={figura}\r\n          img={img}\r\n          newImg={newImg}\r\n          newWidth={newWidth}\r\n          newHeight={newHeight}\r\n          socket={socket}\r\n          deshabilitado={deshabilitado}\r\n        ></DrawingCanvas>\r\n      </div>\r\n      <div className=\"w3-col tools\">\r\n        <div className=\"w3-col\">\r\n          <Barra_Herramientas funcionPincel={cambiar_lapiz} funcionBorrador={cambiar_borrador} deshabilitado={deshabilitado} />\r\n        </div>\r\n        <div className=\"w3-col\">\r\n          <Barra_Colores funcionColor={cambiar_color} deshabilitado={deshabilitado} />\r\n        </div>\r\n        <div className=\"w3-col\">\r\n          <Barra_Grosor funcionGrosor={cambiar_grosor} deshabilitado={deshabilitado} />\r\n        </div>\r\n        <div className=\"w3-col\">\r\n          <Barra_Figuras funcionFiguraCuadrado={dibujarCuadrado} funcionFiguraTriangulo={dibujarTriangulo} funcionFiguraCirculo={dibujarCirculo} deshabilitado={deshabilitado} />\r\n        </div>\r\n        <div className=\"w3-col\">\r\n          <Barra_Funciones funcionLimpiar={limpiar_pizarra} funcionFiguraImagen={subir_imagen} funciontamanoImagen={resizeImg} funciondescargaImagen={downloadImg} deshabilitado={deshabilitado} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"divUsuarios\">\r\n      <div className=\"contenedorUsuarios\">\r\n        <h1>Usuarios</h1>\r\n        <div id=\"sectorListaUsuarios\" className=\"listaUsuarios\"></div>\r\n      </div>\r\n      <div className=\"botonesLevantarBajar\">\r\n        <button id=\"botonLevantarMano\" className=\"botonLevantar\" onClick={levantarMano}>Levantar la Mano</button>\r\n        <button id=\"botonBajarMano\" className=\"botonBajar\" onClick={bajarMano} >Bajar la Mano</button>\r\n      </div>\r\n    </div>\r\n  </>\r\n\r\n\r\n}\r\n\r\nexport default App","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Funciones.js",["104","105","106"],[],"import Boton_Opcion from \"./Boton_Opcion\"\r\n\r\nconst Barra_Funciones = (props) => {\r\n    return(\r\n        <div className=\"w3-container funciones\" >\r\n            <div className=\"fun\" >\r\n                <div className=\"w3-col tamImg\" id=\"resize\" style={{display : 'none'}}>\r\n                     <div className=\"w3-col widthImg\">\r\n                        <label>W:</label>\r\n                        <input type=\"text\" id=\"w\"/>\r\n                    </div>\r\n                     <div className=\"w3-col heightImg\">\r\n                        <label>H:</label>\r\n                        <input type=\"text\" id=\"h\"/>\r\n                     </div>\r\n                     <div className=\"w3-col btnResize\">\r\n                        <button id=\"btnR\" onClick={props.funciontamanoImagen}>resize</button>\r\n                     </div>\r\n                </div>\r\n                \r\n                \r\n                <Boton_Opcion nombre = \"Borrar\" onClick = {props.funcionLimpiar} deshabilitado={props.deshabilitado}/>\r\n                <Boton_Opcion nombre = \"Subir\" input = {<input class=\"sub\" type='file' id=\"inp\"  multiple  onChange={props.funcionFiguraImagen} />} deshabilitado={props.deshabilitado}/>\r\n                <Boton_Opcion nombre = \"Descargar\" onClick = {props.funciondescargaImagen} deshabilitado={props.deshabilitado}/>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Funciones","D:\\GitHub\\pizarrareact2.0\\client\\src\\DrawingCanvas.js",["107","108","109","110","111","112","113","114","115"],[],"import { click } from '@testing-library/user-event/dist/click'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport './styles.css'\r\nimport './w3.css'\r\nvar imDataBG\r\nvar imgData\r\nconst DrawingCanvas = (props) => {\r\n  let color = props.color\r\n  let grosor = props.grosor\r\n  let figura = props.figura\r\n  let img = props.img\r\n  let newImg = props.newImg\r\n  let socket = props.socket\r\n  let deshabilitado = props.deshabilitado\r\n\r\n  let newWidth = props.newWidth\r\n  let newHeight = props.newHeight\r\n\r\n  const canvasRef = useRef(null)\r\n  const contextRef = useRef(null)\r\n  const startX = useRef(0)\r\n  const startY = useRef(0)\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isDrawingRect, setDrawingRect] = useState(false);\r\n  const [isDrawingCircle, setDrawingCircle] = useState(false);\r\n  const [isDrawingTriangle, setDrawingTriangle] = useState(false);\r\n  const [isDrawingImg, setDrawingImg] = useState(false);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    contextRef.current = context;\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    let imInit = contextRef.current.getImageData(0, 0, canvas.width, canvas.height)\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n    contextRef.current.putImageData(imInit, 0, 0)\r\n  }, [window.innerHeight, window.innerWidth])\r\n\r\n  ///\r\n  socket.on('drawing', onDrawingEvent)\r\n  socket.on('cargarCanvas', cargarCanvas)\r\n  ///\r\n  \r\n  function cargarCanvas(data) {\r\n    const imagen = new Image\r\n    imagen.onload = () => {\r\n      contextRef.current.drawImage(imagen, 0, 0)\r\n    }\r\n    imagen.src = data.imgData\r\n  }\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    if (figura === \"linea\") {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      startX.current = offsetX;\r\n      startY.current = offsetY\r\n      setIsDrawing(true);\r\n      nativeEvent.preventDefault();\r\n    }\r\n  };\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    socketDrawLine(startX.current, startY.current, offsetX, offsetY, color, grosor, true)\r\n    startX.current = offsetX\r\n    startY.current = offsetY\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const socketDrawLine = (x0, y0, x1, y1, color, grosor, emit) => {\r\n    contextRef.current.strokeStyle = color;\r\n    contextRef.current.lineWidth = grosor;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(x0, y0)\r\n    contextRef.current.lineTo(x1, y1)\r\n    contextRef.current.stroke()\r\n    contextRef.current.closePath()\r\n    const imgData = canvasRef.current.toDataURL()\r\n    if (!emit) {\r\n      return\r\n    }\r\n    socket.emit('drawing', {\r\n      x0,\r\n      y0,\r\n      x1,\r\n      y1,\r\n      color,\r\n      grosor,\r\n      imgData,\r\n      figura\r\n    })\r\n  }\r\n\r\n  const stopDrawing = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const startDrawRectangle = ({ nativeEvent }) => {\r\n    if (figura === \"cuadrado\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imDataBG = canvasRef.current.toDataURL()\r\n      setDrawingRect(true)\r\n    }\r\n  }\r\n\r\n  const drawRectangle = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const rectWidth = newPosX - startX.current\r\n    const rectHeight = newPosY - startY.current\r\n    socketDrawCuadrado(startX.current, startY.current, rectWidth, rectHeight, color, grosor, imDataBG, true)\r\n  }\r\n\r\n  const socketDrawCuadrado = (x0, y0, x1, y1, color, grosor, imDataBG, emit) => {\r\n    contextRef.current.strokeStyle = color;\r\n    contextRef.current.lineWidth = grosor;\r\n    const imagen = new Image\r\n    imagen.onload = () => {\r\n      contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      contextRef.current.drawImage(imagen, 0, 0)\r\n      contextRef.current.strokeRect(x0, y0, x1, y1)\r\n    }\r\n    imagen.src = imDataBG\r\n    if (!emit) {\r\n      return\r\n    }\r\n    imgData = canvasRef.current.toDataURL()\r\n    socket.emit('drawing', {\r\n      x0,\r\n      y0,\r\n      x1,\r\n      y1,\r\n      color,\r\n      grosor,\r\n      imDataBG,\r\n      imgData,\r\n      figura\r\n    })\r\n  }\r\n\r\n  const stopDrawRect = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    setDrawingRect(false)\r\n  }\r\n\r\n  const startDrawCircle = ({ nativeEvent }) => {\r\n    if (figura === \"circulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imDataBG = canvasRef.current.toDataURL()\r\n      setDrawingCircle(true)\r\n    }\r\n  }\r\n\r\n  const drawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const radioX = Math.abs(newPosX - startX.current)\r\n    const radioY = Math.abs(newPosY - startY.current)\r\n    const radioMax = Math.max(radioX, radioY)\r\n    socketDrawCicrulo(startX.current, startY.current, radioMax, color, grosor, imDataBG, true)\r\n  }\r\n\r\n  const socketDrawCicrulo = (x0, y0, radio, color, grosor, imDataBG, emit) => {\r\n    contextRef.current.strokeStyle = color;\r\n    contextRef.current.lineWidth = grosor;\r\n    const imagen = new Image\r\n    imagen.onload = () => {\r\n      contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      contextRef.current.drawImage(imagen, 0, 0)\r\n      contextRef.current.beginPath()\r\n      contextRef.current.arc(x0, y0, radio, 0, 2 * Math.PI)\r\n      contextRef.current.stroke()\r\n\r\n    }\r\n    imagen.src = imDataBG\r\n    if (!emit) {\r\n      return\r\n    }\r\n    imgData = canvasRef.current.toDataURL()\r\n    socket.emit('drawing', {\r\n      x0,\r\n      y0,\r\n      radio,\r\n      color,\r\n      grosor,\r\n      imDataBG,\r\n      imgData,\r\n      figura\r\n    })\r\n  }\r\n\r\n  const stopDrawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    setDrawingCircle(false)\r\n  }\r\n\r\n  const startDrawTriangle = ({ nativeEvent }) => {\r\n    if (figura === \"triangulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imDataBG = canvasRef.current.toDataURL()\r\n      setDrawingTriangle(true)\r\n    }\r\n  }\r\n\r\n  const drawTriangle = ({ nativeEvent }) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    const vertice = startX.current * 2 - nativeEvent.offsetX\r\n    socketDrawTriangulo(startX.current, startY.current, nativeEvent.offsetX, vertice, nativeEvent.offsetY, color, grosor, imDataBG, true)\r\n\r\n  }\r\n\r\n  const socketDrawTriangulo = (x0, y0, x1, x2, altura, color, grosor, imDataBG, emit) => {\r\n    contextRef.current.strokeStyle = color;\r\n    contextRef.current.lineWidth = grosor;\r\n    const imagen = new Image\r\n    imagen.onload = () => {\r\n      contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      contextRef.current.drawImage(imagen, 0, 0)\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(x0, y0);\r\n      contextRef.current.lineTo(x1, altura);\r\n      contextRef.current.lineTo(x2, altura);\r\n      contextRef.current.closePath();\r\n      contextRef.current.stroke();\r\n    }\r\n    imagen.src = imDataBG\r\n    if (!emit) {\r\n      return\r\n    }\r\n    imgData = canvasRef.current.toDataURL()\r\n    socket.emit('drawing', {\r\n      x0,\r\n      y0,\r\n      x1,\r\n      x2,\r\n      altura,\r\n      color,\r\n      grosor,\r\n      imDataBG,\r\n      imgData,\r\n      figura\r\n    })\r\n  }\r\n\r\n  const stopDrawTriangle = ({ nativeEvent }) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    setDrawingTriangle(false)\r\n  }\r\n\r\n  const drawImg = ({ nativeEvent }) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }\r\n    const offsetX = nativeEvent.offsetX\r\n    const offsetY = nativeEvent.offsetY\r\n    const x0 = offsetX + startX.current\r\n    const y0 = offsetY + startY.current\r\n    socketDrawImage(img, x0, y0, newWidth, newHeight, newImg, true)\r\n    nativeEvent.preventDefault();\r\n  }\r\n\r\n  const socketDrawImage = (img, x0, y0, newWidth, newHeight, srcNewImg, emit) => {\r\n    const BGimage = new Image\r\n    const image = new Image\r\n    BGimage.src = srcNewImg\r\n    BGimage.onload = () => {\r\n      image.src = img\r\n      image.onload = () => {\r\n        contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        contextRef.current.drawImage(BGimage, 0, 0, canvasRef.current.width, canvasRef.current.height)\r\n        contextRef.current.drawImage(image, x0, y0, newWidth, newHeight)\r\n      }\r\n    }\r\n\r\n    if (!emit) {\r\n      return\r\n    }\r\n    imgData = canvasRef.current.toDataURL()\r\n    socket.emit('drawing', {\r\n      img,\r\n      x0,\r\n      y0,\r\n      newWidth,\r\n      newHeight,\r\n      srcNewImg,\r\n      imgData,\r\n      figura\r\n    })\r\n  }\r\n\r\n  const startDrawingImg = ({ nativeEvent }) => {\r\n\r\n    if (figura === \"img\") {\r\n      startX.current -= nativeEvent.offsetX\r\n      startY.current -= nativeEvent.offsetY\r\n      setDrawingImg(true)\r\n    }\r\n  }\r\n  const stopDrawImg = ({ nativeEvent }) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }\r\n    startX.current += nativeEvent.offsetX\r\n    startY.current += nativeEvent.offsetY\r\n    setDrawingImg(false)\r\n  }\r\n\r\n  function onDrawingEvent(data) {\r\n    switch (data.figura) {\r\n      case 'linea':\r\n        socketDrawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.grosor);\r\n        break;\r\n      case 'cuadrado':\r\n        socketDrawCuadrado(data.x0, data.y0, data.x1, data.y1, data.color, data.grosor, data.imgData)\r\n        break;\r\n      case 'circulo':\r\n        socketDrawCicrulo(data.x0, data.y0, data.radio, data.color, data.grosor, data.imgData)\r\n        break;\r\n      case 'triangulo':\r\n        socketDrawTriangulo(data.x0, data.y0, data.x1, data.x2, data.altura, data.color, data.grosor, data.imgData)\r\n        break;\r\n      case 'img':\r\n        socketDrawImage(data.img, data.x0, data.y0, data.newWidth, data.newHeight, data.srcNewImg)\r\n        break;\r\n    }\r\n  }\r\n\r\n  const funcionOnMouseDown = (nativeEvent) => {\r\n    if(!deshabilitado){\r\n      startDrawing(nativeEvent)\r\n      startDrawRectangle(nativeEvent)\r\n      startDrawCircle(nativeEvent)\r\n      startDrawTriangle(nativeEvent)\r\n      startDrawingImg(nativeEvent)\r\n    }\r\n  }\r\n\r\n  const functionOnMouseMove = (nativeEvent) => {\r\n    draw(nativeEvent)\r\n    drawRectangle(nativeEvent)\r\n    drawCircle(nativeEvent)\r\n    drawTriangle(nativeEvent)\r\n    drawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseUp = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n    stopDrawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseOut = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n  }\r\n\r\n  return (\r\n    <canvas className=\"canvas-container\" id='pizarra'\r\n      ref={canvasRef}\r\n      onMouseDown={funcionOnMouseDown}\r\n      onMouseMove={functionOnMouseMove}\r\n      onMouseUp={functionOnMouseUp}\r\n      onMouseOut={functionOnMouseOut}\r\n    >\r\n    </canvas>\r\n  )\r\n}\r\n\r\nexport default DrawingCanvas","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Herramientas.js",["116","117"],[],"import Boton_Herramienta from \"./Boton_Herramienta\"\r\nimport imagenes from \"./imagenes\"\r\n\r\nconst Barra_Herramientas = (props) => {\r\n\r\n    return (\r\n        <div className=\"w3-container herramientas\">\r\n            <div className=\"w3-col herra\">\r\n                <Boton_Herramienta src = {imagenes[0].src} alt = {imagenes[0].titulo} onClick = {props.funcionPincel} deshabilitado = {props.deshabilitado}/>\r\n                <Boton_Herramienta src = {imagenes[1].src} alt = {imagenes[1].titulo} onClick = {props.funcionBorrador} deshabilitado = {props.deshabilitado}/>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Herramientas","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Grosor.js",["118"],[],"import {cambiar_grosor} from \"./DrawingCanvas\"\r\nimport './styles.css'\r\n\r\nconst Barra_Grosor = (props) => {\r\n    return(\r\n        <div className=\"w3-container grosor\">\r\n            <div className=\"gros\">\r\n                 <input type=\"range\"  id = \"vol\"  name=\"vol\" min=\"1\" max=\"10\" defaultValue={1} class=\"selector_color\" disabled = {props.deshabilitado}\r\n                     onChange={props.funcionGrosor} >          \r\n                  </input>\r\n            </div>\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Grosor","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Colores.js",["119","120","121","122","123"],[],"import Boton_Color from \"./Boton_Color\"\r\nimport \"./w3.css\"\r\nimport {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Barra_Colores = (props) => {\r\n    return(\r\n        <div className=\"w3-container colores\">\r\n        <div className=\"w3-col sec1\">\r\n            <Boton_Color className = \"w3-button boton_color w3-red\" value =\"red\" onClick = {props.funcionColor} deshabilitado = {props.deshabilitado}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-blue\" value =\"blue\" onClick = {props.funcionColor} deshabilitado = {props.deshabilitado}/>\r\n        </div>\r\n        <div className=\"sec2\">\r\n            <Boton_Color className = \"w3-button boton_color w3-orange\" value =\"orange\" onClick = {props.funcionColor} deshabilitado = {props.deshabilitado}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-yellow\" value =\"yellow\" onClick = {props.funcionColor} deshabilitado = {props.deshabilitado}/>\r\n        </div>\r\n        \r\n        <div className=\"sec3\">\r\n            <input type=\"color\" class=\"selector_color\" onChange={props.funcionColor} disabled = {props.deshabilitado}></input>\r\n        </div>\r\n        \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Colores","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_CRUD.js",["124"],[],"import Boton_Opcion from \"./Boton_Opcion\"\r\n\r\nconst Barra_CRUD = (props) => {\r\n    return(\r\n        <div className=\"w3-container funciones\">\r\n            <label htmlFor=\"ingresoNombreLienzo\">Nombre Lienzo</label>\r\n            <input type=\"text\" id = \"ingresoNombreLienzo\" disabled={props.deshabilitado}/>\r\n            <Boton_Opcion nombre = \"Guardar Lienzo\" onClick = {props.funcionGuardarLienzo} deshabilitado={props.deshabilitado}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_CRUD","D:\\GitHub\\pizarrareact2.0\\client\\src\\Barra_Figuras.js",["125","126","127"],[],"import Boton_Figura from \"./Boton_Figura\"\r\nimport imagenes from \"./imagenes\"\r\nconst Barra_Figuras = (props) => {\r\n    return (\r\n        <div className=\"w3-container figuras\">\r\n            <div className=\"w3-col fig\">\r\n                <Boton_Figura src={imagenes[3].src} alt={imagenes[3].alt} onClick = {props.funcionFiguraCuadrado} deshabilitado = {props.deshabilitado}/>\r\n                <Boton_Figura src={imagenes[4].src} alt={imagenes[4].alt} onClick = {props.funcionFiguraTriangulo} deshabilitado ={props.deshabilitado}/>\r\n                <Boton_Figura src={imagenes[5].src} alt={imagenes[5].alt} onClick = {props.funcionFiguraCirculo} deshabilitado ={props.deshabilitado}/>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Figuras","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Opcion.js",[],[],"D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Herramienta.js",["128"],[],"import './styles.css'\r\nimport { cambiar_color } from \"./DrawingCanvas\"\r\n\r\nconst Boton_Herramienta = (props) => {\r\n    return (\r\n        <button class=\"w3-button boton_imagen\" onClick={props.onClick} disabled={props.deshabilitado}>\r\n            <img class=\"imagen\" src={props.src} alt={props.alt}  />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Boton_Herramienta","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Color.js",["129"],[],"import {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Boton_Color = (props) =>{\r\n    return (\r\n        <button className={props.className} onClick={props.onClick} value={props.value} disabled={props.deshabilitado}></button>\r\n    )\r\n}\r\n\r\nexport default Boton_Color","D:\\GitHub\\pizarrareact2.0\\client\\src\\imagenes.js",["130"],[],"import lapiz from \"./imagenes/lapiz.png\"\r\nimport borrador from \"./imagenes/borrador.png\"\r\nimport cuadrado from \"./imagenes/cuadrado.png\"\r\nimport triangulo from \"./imagenes/triangulo.png\"\r\nimport circulo from \"./imagenes/circulo.png\"\r\nimport imgP from \"./imagenes/images.jpg\"\r\n\r\n\r\nexport default [\r\n    {\r\n        \"src\": lapiz,\r\n        \"titulo\": \"lapiz\"\r\n    },\r\n    {\r\n        \"src\": borrador,\r\n        \"titulo\": \"borrador\"\r\n    },\r\n    {\r\n        \"src\": imgP,\r\n        \"titulo\": \"imagen\"\r\n    },\r\n    {\r\n        \"src\": cuadrado,\r\n        \"titulo\": \"cuadrado\"\r\n    },\r\n    {\r\n        \"src\": triangulo,\r\n        \"titulo\": \"triangulo\"\r\n    },\r\n    {\r\n        \"src\": circulo,\r\n        \"titulo\": \"circulo\"\r\n    }\r\n\r\n]","D:\\GitHub\\pizarrareact2.0\\client\\src\\Boton_Figura.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":17},{"ruleId":"131","severity":1,"message":"135","line":2,"column":25,"nodeType":"133","messageId":"134","endLine":2,"endColumn":37},{"ruleId":"131","severity":1,"message":"136","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":19},{"ruleId":"131","severity":1,"message":"137","line":28,"column":11,"nodeType":"133","messageId":"134","endLine":28,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":45,"column":6,"nodeType":"140","endLine":45,"endColumn":8,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":55,"column":10,"nodeType":"133","messageId":"134","endLine":55,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":58,"column":6,"nodeType":"140","endLine":58,"endColumn":21,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":116,"column":15,"nodeType":"133","messageId":"134","endLine":116,"endColumn":26},{"ruleId":"131","severity":1,"message":"145","line":128,"column":19,"nodeType":"133","messageId":"134","endLine":128,"endColumn":29},{"ruleId":"131","severity":1,"message":"145","line":135,"column":19,"nodeType":"133","messageId":"134","endLine":135,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":228,"column":20,"nodeType":"148","messageId":"149","endLine":228,"endColumn":29,"fix":"150"},{"ruleId":"131","severity":1,"message":"151","line":409,"column":11,"nodeType":"133","messageId":"134","endLine":409,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":476,"column":15,"nodeType":"148","messageId":"149","endLine":476,"endColumn":24,"fix":"152"},{"ruleId":"146","severity":1,"message":"147","line":477,"column":17,"nodeType":"148","messageId":"149","endLine":477,"endColumn":26,"fix":"153"},{"ruleId":"154","severity":1,"message":"155","line":510,"column":11,"nodeType":"156","messageId":"157","endLine":510,"endColumn":127},{"ruleId":"154","severity":1,"message":"158","line":531,"column":11,"nodeType":"156","messageId":"157","endLine":531,"endColumn":128},{"ruleId":"154","severity":1,"message":"159","line":534,"column":11,"nodeType":"156","messageId":"157","endLine":534,"endColumn":87},{"ruleId":"154","severity":1,"message":"160","line":537,"column":11,"nodeType":"156","messageId":"157","endLine":537,"endColumn":88},{"ruleId":"154","severity":1,"message":"161","line":540,"column":11,"nodeType":"156","messageId":"157","endLine":540,"endColumn":178},{"ruleId":"154","severity":1,"message":"162","line":543,"column":11,"nodeType":"156","messageId":"157","endLine":543,"endColumn":196},{"ruleId":"154","severity":1,"message":"163","line":22,"column":17,"nodeType":"156","messageId":"157","endLine":22,"endColumn":119},{"ruleId":"154","severity":1,"message":"163","line":23,"column":17,"nodeType":"156","messageId":"157","endLine":23,"endColumn":186},{"ruleId":"154","severity":1,"message":"163","line":24,"column":17,"nodeType":"156","messageId":"157","endLine":24,"endColumn":129},{"ruleId":"131","severity":1,"message":"164","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":15},{"ruleId":"138","severity":1,"message":"165","line":48,"column":6,"nodeType":"140","endLine":48,"endColumn":45,"suggestions":"166"},{"ruleId":"146","severity":1,"message":"147","line":56,"column":20,"nodeType":"148","messageId":"149","endLine":56,"endColumn":29,"fix":"167"},{"ruleId":"146","severity":1,"message":"147","line":138,"column":20,"nodeType":"148","messageId":"149","endLine":138,"endColumn":29,"fix":"168"},{"ruleId":"146","severity":1,"message":"147","line":193,"column":20,"nodeType":"148","messageId":"149","endLine":193,"endColumn":29,"fix":"169"},{"ruleId":"146","severity":1,"message":"147","line":247,"column":20,"nodeType":"148","messageId":"149","endLine":247,"endColumn":29,"fix":"170"},{"ruleId":"146","severity":1,"message":"147","line":297,"column":21,"nodeType":"148","messageId":"149","endLine":297,"endColumn":30,"fix":"171"},{"ruleId":"146","severity":1,"message":"147","line":298,"column":19,"nodeType":"148","messageId":"149","endLine":298,"endColumn":28,"fix":"172"},{"ruleId":"173","severity":1,"message":"174","line":343,"column":5,"nodeType":"175","messageId":"176","endLine":359,"endColumn":6},{"ruleId":"154","severity":1,"message":"177","line":9,"column":17,"nodeType":"156","messageId":"157","endLine":9,"endColumn":158},{"ruleId":"154","severity":1,"message":"177","line":10,"column":17,"nodeType":"156","messageId":"157","endLine":10,"endColumn":160},{"ruleId":"131","severity":1,"message":"178","line":1,"column":9,"nodeType":"133","messageId":"134","endLine":1,"endColumn":23},{"ruleId":"131","severity":1,"message":"179","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":22},{"ruleId":"154","severity":1,"message":"180","line":9,"column":13,"nodeType":"156","messageId":"157","endLine":9,"endColumn":152},{"ruleId":"154","severity":1,"message":"180","line":10,"column":13,"nodeType":"156","messageId":"157","endLine":10,"endColumn":154},{"ruleId":"154","severity":1,"message":"180","line":13,"column":13,"nodeType":"156","messageId":"157","endLine":13,"endColumn":158},{"ruleId":"154","severity":1,"message":"180","line":14,"column":13,"nodeType":"156","messageId":"157","endLine":14,"endColumn":158},{"ruleId":"154","severity":1,"message":"163","line":8,"column":13,"nodeType":"156","messageId":"157","endLine":8,"endColumn":129},{"ruleId":"154","severity":1,"message":"181","line":7,"column":17,"nodeType":"156","messageId":"157","endLine":7,"endColumn":154},{"ruleId":"154","severity":1,"message":"181","line":8,"column":17,"nodeType":"156","messageId":"157","endLine":8,"endColumn":154},{"ruleId":"154","severity":1,"message":"181","line":9,"column":17,"nodeType":"156","messageId":"157","endLine":9,"endColumn":152},{"ruleId":"131","severity":1,"message":"179","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":23},{"ruleId":"131","severity":1,"message":"179","line":1,"column":9,"nodeType":"133","messageId":"134","endLine":1,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":9,"column":1,"nodeType":"184","endLine":35,"endColumn":2},"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","'subir_imagen' is defined but never used.","'obtenerId' is defined but never used.","'bd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'leerLienzos'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'listaUsuarios' is assigned a value but never used.",["186"],"'lienzoStore' is assigned a value but never used.","'requestAdd' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"187","text":"188"},"'context' is assigned a value but never used.",{"range":"189","text":"188"},{"range":"190","text":"188"},"react/jsx-pascal-case","Imported JSX component Barra_CRUD must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Barra_Herramientas must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Colores must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Grosor must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Figuras must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Funciones must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Opcion must be in PascalCase or SCREAMING_SNAKE_CASE","'click' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerHeight' aren't valid dependencies because mutating them doesn't re-render the component.",["191"],{"range":"192","text":"188"},{"range":"193","text":"188"},{"range":"194","text":"188"},{"range":"195","text":"188"},{"range":"196","text":"188"},{"range":"197","text":"188"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Imported JSX component Boton_Herramienta must be in PascalCase or SCREAMING_SNAKE_CASE","'cambiar_grosor' is defined but never used.","'cambiar_color' is defined but never used.","Imported JSX component Boton_Color must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Figura must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},[7725,7725],"()",[15281,15281],[15308,15308],{"desc":"202","fix":"203"},[1760,1760],[4079,4079],[5616,5616],[7123,7123],[8461,8461],[8490,8490],"Update the dependencies array to be: [leerLienzos]",{"range":"204","text":"205"},"Update the dependencies array to be: [deshabilitado, leerLienzos]",{"range":"206","text":"207"},"Update the dependencies array to be: []",{"range":"208","text":"209"},[1264,1266],"[leerLienzos]",[1790,1805],"[deshabilitado, leerLienzos]",[1554,1593],"[]"]