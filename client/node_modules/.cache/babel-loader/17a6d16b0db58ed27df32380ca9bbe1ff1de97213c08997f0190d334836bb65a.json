{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"D:/GitHub/pizarrareact2.0/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _objectWithoutProperties = require(\"D:/GitHub/pizarrareact2.0/client/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _excluded = [\"delay\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\nvar _dom = require(\"@testing-library/dom\");\nvar _typeImplementation = require(\"./typeImplementation\");\n\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\nfunction type(element, text) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 0 : _ref$delay,\n    options = _objectWithoutProperties(_ref, _excluded);\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return (0, _typeImplementation.typeImplementation)(element, text, _objectSpread({\n        delay: delay\n      }, options));\n    });\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, _objectSpread({\n      delay: delay\n    }, options)) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","type","_dom","require","_typeImplementation","element","text","delay","options","getConfig","asyncWrapper","typeImplementation","catch","console","error"],"sources":["D:/GitHub/pizarrareact2.0/client/node_modules/@testing-library/user-event/dist/type/index.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.type = type;\r\n\r\nvar _dom = require(\"@testing-library/dom\");\r\n\r\nvar _typeImplementation = require(\"./typeImplementation\");\r\n\r\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\r\n// depending on whether it will be async.\r\nfunction type(element, text, {\r\n  delay = 0,\r\n  ...options\r\n} = {}) {\r\n  // we do not want to wrap in the asyncWrapper if we're not\r\n  // going to actually be doing anything async, so we only wrap\r\n  // if the delay is greater than 0\r\n  if (delay > 0) {\r\n    return (0, _dom.getConfig)().asyncWrapper(() => (0, _typeImplementation.typeImplementation)(element, text, {\r\n      delay,\r\n      ...options\r\n    }));\r\n  } else {\r\n    return void (0, _typeImplementation.typeImplementation)(element, text, {\r\n      delay,\r\n      ...options\r\n    }) // prevents users from dealing with UnhandledPromiseRejectionWarning\r\n    .catch(console.error);\r\n  }\r\n}"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAEbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,IAAI,GAAGA,IAAI;AAEnB,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE1C,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAEzD;AACA;AACA,SAASF,IAAI,CAACI,OAAO,EAAEC,IAAI,EAGnB;EAAA,+EAAJ,CAAC,CAAC;IAAA,kBAFJC,KAAK;IAALA,KAAK,2BAAG,CAAC;IACNC,OAAO;EAEV;EACA;EACA;EACA,IAAID,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,CAAC,CAAC,EAAEL,IAAI,CAACO,SAAS,GAAG,CAACC,YAAY,CAAC;MAAA,OAAM,CAAC,CAAC,EAAEN,mBAAmB,CAACO,kBAAkB,EAAEN,OAAO,EAAEC,IAAI;QACvGC,KAAK,EAALA;MAAK,GACFC,OAAO,EACV;IAAA,EAAC;EACL,CAAC,MAAM;IACL,OAAO,KAAK,CAAC,CAAC,EAAEJ,mBAAmB,CAACO,kBAAkB,EAAEN,OAAO,EAAEC,IAAI;MACnEC,KAAK,EAALA;IAAK,GACFC,OAAO,EACV,CAAC;IAAA,CACFI,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACvB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}