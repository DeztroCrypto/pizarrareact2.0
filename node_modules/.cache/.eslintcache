[{"D:\\GitHub\\pizarrareact2.0\\src\\index.js":"1","D:\\GitHub\\pizarrareact2.0\\src\\App.js":"2","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Grosor.js":"3","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Colores.js":"4","D:\\GitHub\\pizarrareact2.0\\src\\DrawingCanvas.js":"5","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Herramientas.js":"6","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Figuras.js":"7","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Funciones.js":"8","D:\\GitHub\\pizarrareact2.0\\src\\Barra_CRUD.js":"9","D:\\GitHub\\pizarrareact2.0\\src\\imagenes.js":"10","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Color.js":"11","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Herramienta.js":"12","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Figura.js":"13","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Opcion.js":"14"},{"size":302,"mtime":1667997889128,"results":"15","hashOfConfig":"16"},{"size":11047,"mtime":1668160202558,"results":"17","hashOfConfig":"16"},{"size":507,"mtime":1667998347265,"results":"18","hashOfConfig":"16"},{"size":1012,"mtime":1667998347264,"results":"19","hashOfConfig":"16"},{"size":7648,"mtime":1668160202559,"results":"20","hashOfConfig":"16"},{"size":579,"mtime":1667998347266,"results":"21","hashOfConfig":"16"},{"size":653,"mtime":1668157670462,"results":"22","hashOfConfig":"16"},{"size":1200,"mtime":1668160202558,"results":"23","hashOfConfig":"16"},{"size":421,"mtime":1668157670462,"results":"24","hashOfConfig":"16"},{"size":714,"mtime":1667998347266,"results":"25","hashOfConfig":"16"},{"size":233,"mtime":1666666797339,"results":"26","hashOfConfig":"16"},{"size":321,"mtime":1666666797339,"results":"27","hashOfConfig":"16"},{"size":255,"mtime":1666678244671,"results":"28","hashOfConfig":"16"},{"size":249,"mtime":1668160202558,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"talaah",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\pizarrareact2.0\\src\\index.js",["84"],[],"import userEvent from '@testing-library/user-event'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './styles.css'\r\nconst rootElement = ReactDOM.createRoot(document.getElementById('root'))\r\n\r\n\r\nrootElement.render(\r\n    <>\r\n        <App/>\r\n    </>\r\n)","D:\\GitHub\\pizarrareact2.0\\src\\App.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],[],"import React, { useState } from \"react\";\r\nimport DrawingCanvas, { subir_imagen } from \"./DrawingCanvas\";\r\nimport { obtenerId } from \"./DrawingCanvas\";\r\nimport Barra_Herramientas from \"./Barra_Herramientas\";\r\nimport Barra_Colores from \"./Barra_Colores\"\r\nimport Barra_Grosor from \"./Barra_Grosor\";\r\nimport Barra_Funciones from \"./Barra_Funciones\";\r\nimport \"./styles.css\"\r\nimport \"./w3.css\"\r\nimport Barra_Figuras from \"./Barra_Figuras\";\r\nimport { useEffect } from \"react\";\r\nimport Barra_CRUD from \"./Barra_CRUD\";\r\n\r\nconst indexedDB =\r\n  window.indexedDB ||\r\n  window.mozIndexedDB ||\r\n  window.webkitIndexedDB ||\r\n  window.msIndexedDB ||\r\n  window.shimIndexedDB;\r\n\r\nconst crearBaseDeDatos = () => {\r\n  if (!indexedDB) {\r\n    console.log(\"IndexedDB no soportado\")\r\n    return\r\n  }\r\n  const request = indexedDB.open(\"Pizarra-DB\", 1)\r\n  request.onsuccess = () => {\r\n    const bd = request.result\r\n  }\r\n\r\n  request.onupgradeneeded = () => {\r\n    const bd = request.result\r\n    bd.createObjectStore(\"lienzosGuardados\", { keyPath: \"nombre\" })\r\n  }\r\n  request.onerror = (e) => {\r\n    console.log(\"Error\", e)\r\n    console.log(\"An error occurred with IndexedDB\")\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    crearBaseDeDatos()\r\n    leerLienzos()\r\n  }, [])\r\n\r\n  const [figura, setFigura] = useState(\"linea\")\r\n  const [colorAct, setColor] = useState(\"black\")\r\n  const [grosorAct, setGrosor] = useState(3)\r\n  const [img, setImg] = useState(null)\r\n  const [newImg, setnewImg] = useState(null)\r\n  const [newWidth, setWidth] = useState(200)\r\n  const [newHeight, setHeight] = useState(200)\r\n\r\n  let idImg\r\n\r\n\r\n  const cambiar_color = (element) => {\r\n    setColor(element.target.value)\r\n  }\r\n\r\n\r\n  const cambiar_grosor = (element) => {\r\n    setGrosor(element.target.value)\r\n  }\r\n\r\n  const cambiar_lapiz = () => {\r\n    setFigura(\"linea\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const cambiar_borrador = () => {\r\n    setFigura(\"linea\")\r\n    setColor(\"#ffffff\")\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const dibujarCuadrado = () => {\r\n    setFigura(\"cuadrado\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n\r\n  const dibujarTriangulo = () => {\r\n    setFigura(\"triangulo\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n\r\n  const dibujarCirculo = () => {\r\n    setFigura(\"circulo\")\r\n    if (colorAct === \"#ffffff\") {\r\n      setColor(\"black\")\r\n\r\n    }\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n\r\n  const guardarLienzo = () => {\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      let ingresoTexto = document.getElementById(\"ingresoNombreLienzo\")\r\n      if (ingresoTexto.value) {\r\n        const transaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n        const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n        const canvas = document.getElementById('pizarra')\r\n        var image = canvas.toDataURL();\r\n        var nombre = ingresoTexto.value\r\n\r\n        const transactionRead = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n        const lienzoRead = transactionRead.objectStore(\"lienzosGuardados\")\r\n        const requestRead = lienzoRead.get(nombre)\r\n        requestRead.onsuccess = () => {\r\n          const newtransaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n          const newlienzoStore = newtransaction.objectStore(\"lienzosGuardados\")\r\n          if (requestRead.result) {\r\n            const requestAdd = newlienzoStore.put({\r\n              nombre,\r\n              image\r\n            })\r\n            alert(`Lienzo ${nombre} actualizado`)\r\n            ingresoTexto.value = \"\"\r\n          } else {\r\n            const requestAdd = newlienzoStore.add({\r\n              nombre,\r\n              image\r\n            })\r\n            alert(`Lienzo guardado con el nombre ${ingresoTexto.value}`)\r\n            ingresoTexto.value = \"\"\r\n          }\r\n          leerLienzos()\r\n        }\r\n\r\n      } else {\r\n        alert(\"Ingrese un nombre al lienzo porfavor\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const leerLienzos = () => {\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const lienzos = document.getElementById(\"lienzos\")\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.openCursor()\r\n      const fragment = document.createDocumentFragment()\r\n\r\n      request.onsuccess = (e) => {\r\n        const cursor = e.target.result\r\n        if (cursor) {\r\n          const img = document.createElement(\"img\")\r\n          const nombrePizarra = document.createElement(\"label\")\r\n          img.src = cursor.value.image\r\n          img.id = \"lienzoGuardado\"\r\n          nombrePizarra.innerHTML = cursor.value.nombre\r\n          const elementoLienzo = document.createElement(\"div\")\r\n          elementoLienzo.id = \"elementoLienzo\"\r\n          elementoLienzo.appendChild(nombrePizarra)\r\n          elementoLienzo.appendChild(img)\r\n          const divBotones = document.createElement(\"div\")\r\n          divBotones.id = \"botonesLienzoGuardado\"\r\n          const botonActualizar = document.createElement(\"button\")\r\n          botonActualizar.textContent = \"Cargar\"\r\n          botonActualizar.className = \"botonCRUD\"\r\n          botonActualizar.onclick = cargarLienzo\r\n          botonActualizar.id = \"actualizarLienzo\"\r\n          botonActualizar.dataset.nombre = cursor.value.nombre\r\n          divBotones.appendChild(botonActualizar)\r\n          const botonEliminar = document.createElement(\"button\")\r\n          botonEliminar.textContent = \"Eliminar\"\r\n          botonEliminar.className = \"botonCRUD\"\r\n          botonEliminar.onclick = eliminarLienzo\r\n          botonEliminar.dataset.nombre = cursor.value.nombre\r\n          divBotones.appendChild(botonEliminar)\r\n          elementoLienzo.appendChild(divBotones)\r\n          fragment.appendChild(elementoLienzo)\r\n          cursor.continue()\r\n        } else {\r\n          lienzos.textContent = \"\"\r\n          lienzos.appendChild(fragment)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const cargarLienzo = (e) => {\r\n    const key = e.target.dataset.nombre\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readonly\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.get(key)\r\n      request.onsuccess = () => {\r\n        const canvas = document.getElementById('pizarra')\r\n        const context = canvas.getContext(\"2d\")\r\n        const imagen = new Image\r\n        imagen.onload = () => {\r\n          context.clearRect(0, 0, canvas.width, canvas.height);\r\n          context.drawImage(imagen, 0, 0)\r\n        }\r\n        imagen.src = request.result.image\r\n        document.getElementById(\"ingresoNombreLienzo\").value = request.result.nombre\r\n        cambiar_lapiz()\r\n      }\r\n    }\r\n  }\r\n\r\n  const eliminarLienzo = (e) => {\r\n    const key = e.target.dataset.nombre\r\n    const dbPromise = indexedDB.open(\"Pizarra-DB\", 1)\r\n    dbPromise.onsuccess = () => {\r\n      const bd = dbPromise.result\r\n      const transaction = bd.transaction([\"lienzosGuardados\"], \"readwrite\")\r\n      const lienzoStore = transaction.objectStore(\"lienzosGuardados\")\r\n      const request = lienzoStore.delete(key)\r\n      request.onsuccess = () => {\r\n        leerLienzos()\r\n        alert(`El lienzo ${key} se eliminará`)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const limpiar_pizarra = () => {\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    document.getElementById(\"resize\").style.display = \"none\";\r\n  }\r\n  const subir_imagen = () => {\r\n    let img = document.createElement('img')\r\n    const file = document.querySelector('#inp').files[0]\r\n\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext('2d')\r\n    let actuImg\r\n    img.src = URL.createObjectURL(file)\r\n    img.id = 'imgSub'\r\n    setWidth(200)\r\n    setHeight(200)\r\n    img.onload = () => {\r\n\r\n      actuImg = context.getImageData(0, 0, canvas.width, canvas.height)\r\n      setnewImg(actuImg)\r\n      context.drawImage(img, 0, 0, newWidth, newHeight)\r\n      document.getElementById(\"resize\").style.display = \"block\";\r\n\r\n    }\r\n    console.log(img)\r\n\r\n\r\n    setFigura('img')\r\n\r\n    setImg(img)\r\n    document.querySelector('#inp').addEventListener('onchange', function (e) {\r\n      e.currentTarget.files = null;\r\n    })\r\n  }\r\n\r\n  const resizeImg = () => {\r\n\r\n    let img = document.createElement('img')\r\n    const file = document.querySelector('input[type=file]').files[0]\r\n    const canvas = document.getElementById('pizarra')\r\n    const context = canvas.getContext('2d')\r\n    let actuImg\r\n    img.src = URL.createObjectURL(file)\r\n    img.id = 'imgSub'\r\n\r\n    const widthImg = document.getElementById('w').value\r\n    const heightImg = document.getElementById('h').value\r\n    setWidth(widthImg)\r\n    setHeight(heightImg)\r\n    img.onload = () => {\r\n      context.putImageData(newImg, 0, 0)\r\n      context.drawImage(img, 0, 0, widthImg, heightImg)\r\n    }\r\n    console.log(img)\r\n\r\n\r\n    setFigura('img')\r\n\r\n    setImg(img)\r\n  }\r\n\r\n  return <div className=\"principal\">\r\n    <div className=\"w3-col guardado\">\r\n      <div>\r\n        <Barra_CRUD funcionGuardarLienzo={guardarLienzo} funcionCargarLienzo={cargarLienzo} />\r\n      </div>\r\n      <div id=\"contenedorLienzos\">\r\n        <div id=\"lienzos\"></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"w3-col pizarra\">\r\n      <DrawingCanvas\r\n        color={colorAct}\r\n        grosor={grosorAct}\r\n        figura={figura}\r\n        img={img}\r\n        newImg={newImg}\r\n        newWidth={newWidth}\r\n        newHeight={newHeight}\r\n      ></DrawingCanvas>\r\n    </div>\r\n    <div className=\"w3-col tools\">\r\n      <div className=\"w3-col\">\r\n        <Barra_Herramientas funcionPincel={cambiar_lapiz} funcionBorrador={cambiar_borrador} />\r\n      </div>\r\n      <div className=\"w3-col\">\r\n        <Barra_Colores funcionColor={cambiar_color} />\r\n      </div>\r\n      <div className=\"w3-col\">\r\n        <Barra_Grosor funcionGrosor={cambiar_grosor} />\r\n      </div>\r\n      <div className=\"w3-col\">\r\n        <Barra_Figuras funcionFiguraCuadrado={dibujarCuadrado} funcionFiguraTriangulo={dibujarTriangulo} funcionFiguraCirculo={dibujarCirculo}/>\r\n      </div>\r\n      <div className=\"w3-col\">\r\n        <Barra_Funciones funcionLimpiar={limpiar_pizarra} funcionFiguraImagen={subir_imagen} funciontamanoImagen={resizeImg} />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n}\r\n\r\nexport default App","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Grosor.js",["101"],[],"import {cambiar_grosor} from \"./DrawingCanvas\"\r\nimport './styles.css'\r\n\r\nconst Barra_Grosor = (props) => {\r\n    return(\r\n        <div className=\"w3-container grosor\">\r\n            <div className=\"gros\">\r\n                 <input type=\"range\"  id = \"vol\"  name=\"vol\" min=\"1\" max=\"10\" defaultValue={1} class=\"selector_color\"\r\n                     onChange={props.funcionGrosor} >          \r\n                  </input>\r\n            </div>\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Grosor","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Colores.js",["102","103","104","105","106"],[],"import Boton_Color from \"./Boton_Color\"\r\nimport \"./w3.css\"\r\nimport {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Barra_Colores = (props) => {\r\n    return(\r\n        <div className=\"w3-container colores\">\r\n        <div className=\"w3-col sec1\">\r\n            <Boton_Color className = \"w3-button boton_color w3-red\" value =\"red\" onClick = {props.funcionColor}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-blue\" value =\"blue\" onClick = {props.funcionColor}/>\r\n        </div>\r\n        <div className=\"sec2\">\r\n            <Boton_Color className = \"w3-button boton_color w3-orange\" value =\"orange\" onClick = {props.funcionColor}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-yellow\" value =\"yellow\" onClick = {props.funcionColor}/>\r\n        </div>\r\n        \r\n        <div className=\"sec3\">\r\n            <input type=\"color\" class=\"selector_color\" onChange={props.funcionColor} ></input>\r\n        </div>\r\n        \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Colores","D:\\GitHub\\pizarrareact2.0\\src\\DrawingCanvas.js",["107","108"],[],"import { click } from '@testing-library/user-event/dist/click'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport './styles.css'\r\nimport './w3.css'\r\nvar imdata\r\n\r\nconst DrawingCanvas = (props) => {\r\n  let color = props.color\r\n  let grosor = props.grosor\r\n  let figura = props.figura\r\n  let img = props.img\r\n  let newImg = props.newImg\r\n\r\n\r\n  let newWidth = props.newWidth\r\n  let newHeight = props.newHeight\r\n\r\n  const canvasRef = useRef(null)\r\n  const contextRef = useRef(null)\r\n  const startX = useRef(0)\r\n  const startY = useRef(0)\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isDrawingRect, setDrawingRect] = useState(false);\r\n  const [isDrawingCircle, setDrawingCircle] = useState(false);\r\n  const [isDrawingTriangle, setDrawingTriangle] = useState(false);\r\n  const [isDrawingImg, setDrawingImg] = useState(false);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    contextRef.current = context;\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    let imInit = contextRef.current.getImageData(0, 0, canvas.width, canvas.height)\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n    contextRef.current.putImageData(imInit, 0, 0)\r\n  },[window.innerHeight,window.innerWidth])\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    if (figura === \"linea\") {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      contextRef.current.beginPath();\r\n      contextRef.current.strokeStyle = color;\r\n      contextRef.current.lineWidth = grosor;\r\n      contextRef.current.moveTo(offsetX, offsetY);\r\n      contextRef.current.lineTo(offsetX, offsetY);\r\n      contextRef.current.stroke();\r\n      setIsDrawing(true);\r\n      nativeEvent.preventDefault();\r\n    }\r\n  };\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const stopDrawing = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const startDrawRectangle = ({ nativeEvent }) => {\r\n    if (figura === \"cuadrado\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingRect(true)\r\n    }\r\n  }\r\n\r\n  const drawRectangle = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const rectWidth = newPosX - startX.current\r\n    const rectHeight = newPosY - startY.current\r\n\r\n    contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n    contextRef.current.strokeRect(startX.current, startY.current, rectWidth, rectHeight)\r\n\r\n  }\r\n\r\n  const stopDrawRect = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    setDrawingRect(false)\r\n  }\r\n\r\n  const startDrawCircle = ({ nativeEvent }) => {\r\n    if (figura === \"circulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingCircle(true)\r\n    }\r\n  }\r\n\r\n  const drawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const radioX = Math.abs(newPosX - startX.current)\r\n    const radioY = Math.abs(newPosY - startY.current)\r\n    const radioMax = Math.max(radioX, radioY)\r\n    contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n\r\n    contextRef.current.beginPath()\r\n    contextRef.current.arc(startX.current, startY.current, radioMax, 0, 2 * Math.PI)\r\n    contextRef.current.stroke()\r\n\r\n  }\r\n\r\n  const stopDrawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    setDrawingCircle(false)\r\n  }\r\n\r\n  const startDrawTriangle = ({ nativeEvent }) => {\r\n    if (figura === \"triangulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingTriangle(true)\r\n    }\r\n  }\r\n\r\n  const drawTriangle = ({ nativeEvent }) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    contextRef.current.clearRect(0, 0,canvasRef.current.width, canvasRef.current.height);\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(startX.current, startY.current);\r\n    contextRef.current.lineTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n    contextRef.current.lineTo(startX.current * 2 - nativeEvent.offsetX, nativeEvent.offsetY);\r\n    contextRef.current.closePath();\r\n    contextRef.current.stroke();\r\n  }\r\n\r\n  const stopDrawTriangle = ({nativeEvent}) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    setDrawingTriangle(false)\r\n  }\r\n  const drawImg = ({nativeEvent}) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }\r\n    contextRef.current.clearRect(0, 0,canvasRef.current.width, canvasRef.current.height);\r\n    contextRef.current.putImageData(newImg, 0, 0)\r\n    const offsetX = nativeEvent.offsetX\r\n    const offsetY = nativeEvent.offsetY\r\n    contextRef.current.drawImage(img,offsetX+startX.current, offsetY+ startY.current,newWidth,newHeight)\r\n    \r\n    nativeEvent.preventDefault();\r\n\r\n  }\r\n  const startDrawingImg = ({nativeEvent}) => {\r\n\r\n    if (figura === \"img\") {\r\n      startX.current -= nativeEvent.offsetX\r\n      startY.current -= nativeEvent.offsetY\r\n      setDrawingImg(true)\r\n    }    \r\n  }\r\n  const stopDrawImg = ({nativeEvent}) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }    \r\n    const { offsetX, offsetY } = nativeEvent;\r\n    startX.current += offsetX\r\n    startY.current += offsetY\r\n    setDrawingImg(false)\r\n  }\r\n\r\n\r\n  const funcionOnMouseDown = (nativeEvent) => {\r\n    contextRef.current.strokeStyle = color\r\n    contextRef.current.lineWidth = grosor\r\n    startDrawing(nativeEvent)\r\n    startDrawRectangle(nativeEvent)\r\n    startDrawCircle(nativeEvent)\r\n    startDrawTriangle(nativeEvent)\r\n    startDrawingImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseMove = (nativeEvent) => {\r\n    draw(nativeEvent)\r\n    drawRectangle(nativeEvent)\r\n    drawCircle(nativeEvent)\r\n    drawTriangle(nativeEvent)\r\n    drawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseUp = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n    stopDrawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseOut = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n  }\r\n\r\n  return (\r\n    <canvas className=\"canvas-container\" id='pizarra'\r\n      ref={canvasRef}\r\n      onMouseDown={funcionOnMouseDown}\r\n      onMouseMove={functionOnMouseMove}\r\n      onMouseUp={functionOnMouseUp}\r\n      onMouseOut={functionOnMouseOut}\r\n      >\r\n      \r\n    </canvas>\r\n  )\r\n}\r\n\r\nexport default DrawingCanvas","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Herramientas.js",["109","110"],[],"import Boton_Herramienta from \"./Boton_Herramienta\"\r\nimport imagenes from \"./imagenes\"\r\n\r\nconst Barra_Herramientas = (props) => {\r\n\r\n    return (\r\n        <div className=\"w3-container herramientas\">\r\n            <div className=\"w3-col herra\">\r\n                <Boton_Herramienta src = {imagenes[0].src} alt = {imagenes[0].titulo} onClick = {props.funcionPincel}/>\r\n                <Boton_Herramienta src = {imagenes[1].src} alt = {imagenes[1].titulo} onClick = {props.funcionBorrador}/>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Herramientas","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Figuras.js",["111","112","113"],[],"import Boton_Figura from \"./Boton_Figura\"\r\nimport imagenes from \"./imagenes\"\r\nconst Barra_Figuras = (props) => {\r\n    return (\r\n        <div className=\"w3-container figuras\">\r\n            <div className=\"w3-col fig\">\r\n                <Boton_Figura src={imagenes[3].src} alt={imagenes[3].alt} onClick = {props.funcionFiguraCuadrado}/>\r\n                <Boton_Figura src={imagenes[4].src} alt={imagenes[4].alt} onClick = {props.funcionFiguraTriangulo}/>\r\n                <Boton_Figura src={imagenes[5].src} alt={imagenes[5].alt} onClick = {props.funcionFiguraCirculo}/>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Figuras","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Funciones.js",["114","115"],[],"import Boton_Opcion from \"./Boton_Opcion\"\r\n\r\nconst Barra_Funciones = (props) => {\r\n    return(\r\n        <div className=\"w3-container funciones\" >\r\n            <div className=\"fun\" >\r\n                <div className=\"w3-col tamImg\" id=\"resize\" style={{display : 'none'}}>\r\n                     <div className=\"w3-col widthImg\">\r\n                        <label>W:</label>\r\n                        <input type=\"text\" id=\"w\"/>\r\n                    </div>\r\n                     <div className=\"w3-col heightImg\">\r\n                        <label>H:</label>\r\n                        <input type=\"text\" id=\"h\"/>\r\n                     </div>\r\n                     <div className=\"w3-col btnResize\">\r\n                        <button id=\"btnR\" onClick={props.funciontamanoImagen}>resize</button>\r\n                     </div>\r\n                </div>\r\n                \r\n                \r\n                <Boton_Opcion nombre = \"Borrar\" onClick = {props.funcionLimpiar}/>\r\n                <Boton_Opcion nombre = \"Subir\" input = {<input class=\"sub\" type='file' id=\"inp\"  multiple  onChange={props.funcionFiguraImagen} />} />\r\n\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Funciones","D:\\GitHub\\pizarrareact2.0\\src\\Barra_CRUD.js",["116"],[],"import Boton_Opcion from \"./Boton_Opcion\"\r\n\r\nconst Barra_CRUD = (props) => {\r\n    return(\r\n        <div className=\"w3-container funciones\">\r\n            <label htmlFor=\"ingresoNombreLienzo\">Nombre Lienzo</label>\r\n            <input type=\"text\" id = \"ingresoNombreLienzo\"/>\r\n            <Boton_Opcion nombre = \"Guardar Lienzo\" onClick = {props.funcionGuardarLienzo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_CRUD","D:\\GitHub\\pizarrareact2.0\\src\\imagenes.js",["117"],[],"import lapiz from \"./imagenes/lapiz.png\"\r\nimport borrador from \"./imagenes/borrador.png\"\r\nimport cuadrado from \"./imagenes/cuadrado.png\"\r\nimport triangulo from \"./imagenes/triangulo.png\"\r\nimport circulo from \"./imagenes/circulo.png\"\r\nimport imgP from \"./imagenes/images.jpg\"\r\n\r\n\r\nexport default [\r\n    {\r\n        \"src\": lapiz,\r\n        \"titulo\": \"lapiz\"\r\n    },\r\n    {\r\n        \"src\": borrador,\r\n        \"titulo\": \"borrador\"\r\n    },\r\n    {\r\n        \"src\": imgP,\r\n        \"titulo\": \"imagen\"\r\n    },\r\n    {\r\n        \"src\": cuadrado,\r\n        \"titulo\": \"cuadrado\"\r\n    },\r\n    {\r\n        \"src\": triangulo,\r\n        \"titulo\": \"triangulo\"\r\n    },\r\n    {\r\n        \"src\": circulo,\r\n        \"titulo\": \"circulo\"\r\n    }\r\n\r\n]","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Color.js",["118"],[],"import {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Boton_Color = (props) =>{\r\n    return (\r\n        <button className={props.className} onClick={props.onClick} value={props.value}></button>\r\n    )\r\n}\r\n\r\nexport default Boton_Color","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Herramienta.js",["119"],[],"import './styles.css'\r\nimport {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Boton_Herramienta = (props) => {\r\n    return (\r\n        <button class=\"boton_imagen\" onClick= {props.onClick}>\r\n            <img class=\"imagen\" src={props.src} alt={props.alt} />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Boton_Herramienta","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Figura.js",[],[],"D:\\GitHub\\pizarrareact2.0\\src\\Boton_Opcion.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":17},{"ruleId":"120","severity":1,"message":"124","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":37},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"126","line":28,"column":11,"nodeType":"122","messageId":"123","endLine":28,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":45,"column":6,"nodeType":"129","endLine":45,"endColumn":8,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"131","line":55,"column":7,"nodeType":"122","messageId":"123","endLine":55,"endColumn":12},{"ruleId":"120","severity":1,"message":"132","line":116,"column":15,"nodeType":"122","messageId":"123","endLine":116,"endColumn":26},{"ruleId":"120","severity":1,"message":"133","line":128,"column":19,"nodeType":"122","messageId":"123","endLine":128,"endColumn":29},{"ruleId":"120","severity":1,"message":"133","line":135,"column":19,"nodeType":"122","messageId":"123","endLine":135,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":210,"column":24,"nodeType":"136","messageId":"137","endLine":210,"endColumn":33,"fix":"138"},{"ruleId":"120","severity":1,"message":"139","line":281,"column":9,"nodeType":"122","messageId":"123","endLine":281,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":304,"column":9,"nodeType":"142","messageId":"143","endLine":304,"endColumn":95},{"ruleId":"140","severity":1,"message":"144","line":323,"column":9,"nodeType":"142","messageId":"143","endLine":323,"endColumn":96},{"ruleId":"140","severity":1,"message":"145","line":326,"column":9,"nodeType":"142","messageId":"143","endLine":326,"endColumn":55},{"ruleId":"140","severity":1,"message":"146","line":329,"column":9,"nodeType":"142","messageId":"143","endLine":329,"endColumn":56},{"ruleId":"140","severity":1,"message":"147","line":332,"column":9,"nodeType":"142","messageId":"143","endLine":332,"endColumn":145},{"ruleId":"140","severity":1,"message":"148","line":335,"column":9,"nodeType":"142","messageId":"143","endLine":335,"endColumn":128},{"ruleId":"120","severity":1,"message":"149","line":1,"column":9,"nodeType":"122","messageId":"123","endLine":1,"endColumn":23},{"ruleId":"120","severity":1,"message":"150","line":3,"column":9,"nodeType":"122","messageId":"123","endLine":3,"endColumn":22},{"ruleId":"140","severity":1,"message":"151","line":9,"column":13,"nodeType":"142","messageId":"143","endLine":9,"endColumn":114},{"ruleId":"140","severity":1,"message":"151","line":10,"column":13,"nodeType":"142","messageId":"143","endLine":10,"endColumn":116},{"ruleId":"140","severity":1,"message":"151","line":13,"column":13,"nodeType":"142","messageId":"143","endLine":13,"endColumn":120},{"ruleId":"140","severity":1,"message":"151","line":14,"column":13,"nodeType":"142","messageId":"143","endLine":14,"endColumn":120},{"ruleId":"120","severity":1,"message":"152","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":15},{"ruleId":"127","severity":1,"message":"153","line":47,"column":5,"nodeType":"129","endLine":47,"endColumn":43,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"155","line":9,"column":17,"nodeType":"142","messageId":"143","endLine":9,"endColumn":120},{"ruleId":"140","severity":1,"message":"155","line":10,"column":17,"nodeType":"142","messageId":"143","endLine":10,"endColumn":122},{"ruleId":"140","severity":1,"message":"156","line":7,"column":17,"nodeType":"142","messageId":"143","endLine":7,"endColumn":116},{"ruleId":"140","severity":1,"message":"156","line":8,"column":17,"nodeType":"142","messageId":"143","endLine":8,"endColumn":117},{"ruleId":"140","severity":1,"message":"156","line":9,"column":17,"nodeType":"142","messageId":"143","endLine":9,"endColumn":115},{"ruleId":"140","severity":1,"message":"157","line":22,"column":17,"nodeType":"142","messageId":"143","endLine":22,"endColumn":83},{"ruleId":"140","severity":1,"message":"157","line":23,"column":17,"nodeType":"142","messageId":"143","endLine":23,"endColumn":151},{"ruleId":"140","severity":1,"message":"157","line":8,"column":13,"nodeType":"142","messageId":"143","endLine":8,"endColumn":93},{"ruleId":"158","severity":1,"message":"159","line":9,"column":1,"nodeType":"160","endLine":35,"endColumn":2},{"ruleId":"120","severity":1,"message":"150","line":1,"column":9,"nodeType":"122","messageId":"123","endLine":1,"endColumn":22},{"ruleId":"120","severity":1,"message":"150","line":2,"column":9,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","'subir_imagen' is defined but never used.","'obtenerId' is defined but never used.","'bd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'leerLienzos'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'idImg' is defined but never used.","'lienzoStore' is assigned a value but never used.","'requestAdd' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"162","text":"163"},"'actuImg' is defined but never used.","react/jsx-pascal-case","Imported JSX component Barra_CRUD must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Barra_Herramientas must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Colores must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Grosor must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Figuras must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Funciones must be in PascalCase or SCREAMING_SNAKE_CASE","'cambiar_grosor' is defined but never used.","'cambiar_color' is defined but never used.","Imported JSX component Boton_Color must be in PascalCase or SCREAMING_SNAKE_CASE","'click' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerHeight' aren't valid dependencies because mutating them doesn't re-render the component.",["164"],"Imported JSX component Boton_Herramienta must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Figura must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Opcion must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"165","fix":"166"},[6996,6996],"()",{"desc":"167","fix":"168"},"Update the dependencies array to be: [leerLienzos]",{"range":"169","text":"170"},"Update the dependencies array to be: []",{"range":"171","text":"172"},[1248,1250],"[leerLienzos]",[1442,1480],"[]"]