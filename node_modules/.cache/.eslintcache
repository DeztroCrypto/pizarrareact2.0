[{"D:\\GitHub\\pizarrareact2.0\\src\\index.js":"1","D:\\GitHub\\pizarrareact2.0\\src\\App.js":"2","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Grosor.js":"3","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Colores.js":"4","D:\\GitHub\\pizarrareact2.0\\src\\DrawingCanvas.js":"5","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Herramientas.js":"6","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Figuras.js":"7","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Funciones.js":"8","D:\\GitHub\\pizarrareact2.0\\src\\Barra_CRUD.js":"9","D:\\GitHub\\pizarrareact2.0\\src\\imagenes.js":"10","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Color.js":"11","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Herramienta.js":"12","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Figura.js":"13","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Opcion.js":"14"},{"size":302,"mtime":1667997889128,"results":"15","hashOfConfig":"16"},{"size":11322,"mtime":1668189642438,"results":"17","hashOfConfig":"16"},{"size":507,"mtime":1667998347265,"results":"18","hashOfConfig":"16"},{"size":1012,"mtime":1667998347264,"results":"19","hashOfConfig":"16"},{"size":7648,"mtime":1668160202559,"results":"20","hashOfConfig":"16"},{"size":579,"mtime":1667998347266,"results":"21","hashOfConfig":"16"},{"size":653,"mtime":1668186248747,"results":"22","hashOfConfig":"16"},{"size":1294,"mtime":1668189729630,"results":"23","hashOfConfig":"16"},{"size":421,"mtime":1668186248746,"results":"24","hashOfConfig":"16"},{"size":714,"mtime":1667998347266,"results":"25","hashOfConfig":"16"},{"size":233,"mtime":1666666797339,"results":"26","hashOfConfig":"16"},{"size":321,"mtime":1666666797339,"results":"27","hashOfConfig":"16"},{"size":255,"mtime":1666678244671,"results":"28","hashOfConfig":"16"},{"size":249,"mtime":1668160202558,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"talaah",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\pizarrareact2.0\\src\\index.js",["80"],[],"import userEvent from '@testing-library/user-event'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './styles.css'\r\nconst rootElement = ReactDOM.createRoot(document.getElementById('root'))\r\n\r\n\r\nrootElement.render(\r\n    <>\r\n        <App/>\r\n    </>\r\n)","D:\\GitHub\\pizarrareact2.0\\src\\App.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],[],"D:\\GitHub\\pizarrareact2.0\\src\\Barra_Grosor.js",["97"],[],"import {cambiar_grosor} from \"./DrawingCanvas\"\r\nimport './styles.css'\r\n\r\nconst Barra_Grosor = (props) => {\r\n    return(\r\n        <div className=\"w3-container grosor\">\r\n            <div className=\"gros\">\r\n                 <input type=\"range\"  id = \"vol\"  name=\"vol\" min=\"1\" max=\"10\" defaultValue={1} class=\"selector_color\"\r\n                     onChange={props.funcionGrosor} >          \r\n                  </input>\r\n            </div>\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Grosor","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Colores.js",["98","99","100","101","102"],[],"import Boton_Color from \"./Boton_Color\"\r\nimport \"./w3.css\"\r\nimport {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Barra_Colores = (props) => {\r\n    return(\r\n        <div className=\"w3-container colores\">\r\n        <div className=\"w3-col sec1\">\r\n            <Boton_Color className = \"w3-button boton_color w3-red\" value =\"red\" onClick = {props.funcionColor}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-blue\" value =\"blue\" onClick = {props.funcionColor}/>\r\n        </div>\r\n        <div className=\"sec2\">\r\n            <Boton_Color className = \"w3-button boton_color w3-orange\" value =\"orange\" onClick = {props.funcionColor}/>\r\n            <Boton_Color className = \"w3-button boton_color w3-yellow\" value =\"yellow\" onClick = {props.funcionColor}/>\r\n        </div>\r\n        \r\n        <div className=\"sec3\">\r\n            <input type=\"color\" class=\"selector_color\" onChange={props.funcionColor} ></input>\r\n        </div>\r\n        \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Colores","D:\\GitHub\\pizarrareact2.0\\src\\DrawingCanvas.js",["103","104"],[],"import { click } from '@testing-library/user-event/dist/click'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport './styles.css'\r\nimport './w3.css'\r\nvar imdata\r\n\r\nconst DrawingCanvas = (props) => {\r\n  let color = props.color\r\n  let grosor = props.grosor\r\n  let figura = props.figura\r\n  let img = props.img\r\n  let newImg = props.newImg\r\n\r\n\r\n  let newWidth = props.newWidth\r\n  let newHeight = props.newHeight\r\n\r\n  const canvasRef = useRef(null)\r\n  const contextRef = useRef(null)\r\n  const startX = useRef(0)\r\n  const startY = useRef(0)\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isDrawingRect, setDrawingRect] = useState(false);\r\n  const [isDrawingCircle, setDrawingCircle] = useState(false);\r\n  const [isDrawingTriangle, setDrawingTriangle] = useState(false);\r\n  const [isDrawingImg, setDrawingImg] = useState(false);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    contextRef.current = context;\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    let imInit = contextRef.current.getImageData(0, 0, canvas.width, canvas.height)\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n    contextRef.current.putImageData(imInit, 0, 0)\r\n  },[window.innerHeight,window.innerWidth])\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    if (figura === \"linea\") {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      contextRef.current.beginPath();\r\n      contextRef.current.strokeStyle = color;\r\n      contextRef.current.lineWidth = grosor;\r\n      contextRef.current.moveTo(offsetX, offsetY);\r\n      contextRef.current.lineTo(offsetX, offsetY);\r\n      contextRef.current.stroke();\r\n      setIsDrawing(true);\r\n      nativeEvent.preventDefault();\r\n    }\r\n  };\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const stopDrawing = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const startDrawRectangle = ({ nativeEvent }) => {\r\n    if (figura === \"cuadrado\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingRect(true)\r\n    }\r\n  }\r\n\r\n  const drawRectangle = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const rectWidth = newPosX - startX.current\r\n    const rectHeight = newPosY - startY.current\r\n\r\n    contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n    contextRef.current.strokeRect(startX.current, startY.current, rectWidth, rectHeight)\r\n\r\n  }\r\n\r\n  const stopDrawRect = ({ nativeEvent }) => {\r\n    if (!isDrawingRect) {\r\n      return\r\n    }\r\n    setDrawingRect(false)\r\n  }\r\n\r\n  const startDrawCircle = ({ nativeEvent }) => {\r\n    if (figura === \"circulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingCircle(true)\r\n    }\r\n  }\r\n\r\n  const drawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    const newPosX = nativeEvent.offsetX\r\n    const newPosY = nativeEvent.offsetY\r\n    const radioX = Math.abs(newPosX - startX.current)\r\n    const radioY = Math.abs(newPosY - startY.current)\r\n    const radioMax = Math.max(radioX, radioY)\r\n    contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n\r\n    contextRef.current.beginPath()\r\n    contextRef.current.arc(startX.current, startY.current, radioMax, 0, 2 * Math.PI)\r\n    contextRef.current.stroke()\r\n\r\n  }\r\n\r\n  const stopDrawCircle = ({ nativeEvent }) => {\r\n    if (!isDrawingCircle) {\r\n      return\r\n    }\r\n    setDrawingCircle(false)\r\n  }\r\n\r\n  const startDrawTriangle = ({ nativeEvent }) => {\r\n    if (figura === \"triangulo\") {\r\n      startX.current = nativeEvent.offsetX\r\n      startY.current = nativeEvent.offsetY\r\n      imdata = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n      setDrawingTriangle(true)\r\n    }\r\n  }\r\n\r\n  const drawTriangle = ({ nativeEvent }) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    contextRef.current.clearRect(0, 0,canvasRef.current.width, canvasRef.current.height);\r\n    contextRef.current.putImageData(imdata, 0, 0)\r\n\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(startX.current, startY.current);\r\n    contextRef.current.lineTo(nativeEvent.offsetX, nativeEvent.offsetY);\r\n    contextRef.current.lineTo(startX.current * 2 - nativeEvent.offsetX, nativeEvent.offsetY);\r\n    contextRef.current.closePath();\r\n    contextRef.current.stroke();\r\n  }\r\n\r\n  const stopDrawTriangle = ({nativeEvent}) => {\r\n    if (!isDrawingTriangle) {\r\n      return\r\n    }\r\n    setDrawingTriangle(false)\r\n  }\r\n  const drawImg = ({nativeEvent}) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }\r\n    contextRef.current.clearRect(0, 0,canvasRef.current.width, canvasRef.current.height);\r\n    contextRef.current.putImageData(newImg, 0, 0)\r\n    const offsetX = nativeEvent.offsetX\r\n    const offsetY = nativeEvent.offsetY\r\n    contextRef.current.drawImage(img,offsetX+startX.current, offsetY+ startY.current,newWidth,newHeight)\r\n    \r\n    nativeEvent.preventDefault();\r\n\r\n  }\r\n  const startDrawingImg = ({nativeEvent}) => {\r\n\r\n    if (figura === \"img\") {\r\n      startX.current -= nativeEvent.offsetX\r\n      startY.current -= nativeEvent.offsetY\r\n      setDrawingImg(true)\r\n    }    \r\n  }\r\n  const stopDrawImg = ({nativeEvent}) => {\r\n    if (!isDrawingImg) {\r\n      return\r\n    }    \r\n    const { offsetX, offsetY } = nativeEvent;\r\n    startX.current += offsetX\r\n    startY.current += offsetY\r\n    setDrawingImg(false)\r\n  }\r\n\r\n\r\n  const funcionOnMouseDown = (nativeEvent) => {\r\n    contextRef.current.strokeStyle = color\r\n    contextRef.current.lineWidth = grosor\r\n    startDrawing(nativeEvent)\r\n    startDrawRectangle(nativeEvent)\r\n    startDrawCircle(nativeEvent)\r\n    startDrawTriangle(nativeEvent)\r\n    startDrawingImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseMove = (nativeEvent) => {\r\n    draw(nativeEvent)\r\n    drawRectangle(nativeEvent)\r\n    drawCircle(nativeEvent)\r\n    drawTriangle(nativeEvent)\r\n    drawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseUp = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n    stopDrawImg(nativeEvent)\r\n  }\r\n\r\n  const functionOnMouseOut = (nativeEvent) => {\r\n    stopDrawing(nativeEvent)\r\n    stopDrawRect(nativeEvent)\r\n    stopDrawCircle(nativeEvent)\r\n    stopDrawTriangle(nativeEvent)\r\n  }\r\n\r\n  return (\r\n    <canvas className=\"canvas-container\" id='pizarra'\r\n      ref={canvasRef}\r\n      onMouseDown={funcionOnMouseDown}\r\n      onMouseMove={functionOnMouseMove}\r\n      onMouseUp={functionOnMouseUp}\r\n      onMouseOut={functionOnMouseOut}\r\n      >\r\n      \r\n    </canvas>\r\n  )\r\n}\r\n\r\nexport default DrawingCanvas","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Herramientas.js",["105","106"],[],"import Boton_Herramienta from \"./Boton_Herramienta\"\r\nimport imagenes from \"./imagenes\"\r\n\r\nconst Barra_Herramientas = (props) => {\r\n\r\n    return (\r\n        <div className=\"w3-container herramientas\">\r\n            <div className=\"w3-col herra\">\r\n                <Boton_Herramienta src = {imagenes[0].src} alt = {imagenes[0].titulo} onClick = {props.funcionPincel}/>\r\n                <Boton_Herramienta src = {imagenes[1].src} alt = {imagenes[1].titulo} onClick = {props.funcionBorrador}/>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barra_Herramientas","D:\\GitHub\\pizarrareact2.0\\src\\Barra_Figuras.js",["107","108","109"],[],"D:\\GitHub\\pizarrareact2.0\\src\\Barra_Funciones.js",["110","111","112"],[],"D:\\GitHub\\pizarrareact2.0\\src\\Barra_CRUD.js",["113"],[],"D:\\GitHub\\pizarrareact2.0\\src\\imagenes.js",["114"],[],"import lapiz from \"./imagenes/lapiz.png\"\r\nimport borrador from \"./imagenes/borrador.png\"\r\nimport cuadrado from \"./imagenes/cuadrado.png\"\r\nimport triangulo from \"./imagenes/triangulo.png\"\r\nimport circulo from \"./imagenes/circulo.png\"\r\nimport imgP from \"./imagenes/images.jpg\"\r\n\r\n\r\nexport default [\r\n    {\r\n        \"src\": lapiz,\r\n        \"titulo\": \"lapiz\"\r\n    },\r\n    {\r\n        \"src\": borrador,\r\n        \"titulo\": \"borrador\"\r\n    },\r\n    {\r\n        \"src\": imgP,\r\n        \"titulo\": \"imagen\"\r\n    },\r\n    {\r\n        \"src\": cuadrado,\r\n        \"titulo\": \"cuadrado\"\r\n    },\r\n    {\r\n        \"src\": triangulo,\r\n        \"titulo\": \"triangulo\"\r\n    },\r\n    {\r\n        \"src\": circulo,\r\n        \"titulo\": \"circulo\"\r\n    }\r\n\r\n]","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Color.js",["115"],[],"import {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Boton_Color = (props) =>{\r\n    return (\r\n        <button className={props.className} onClick={props.onClick} value={props.value}></button>\r\n    )\r\n}\r\n\r\nexport default Boton_Color","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Herramienta.js",["116"],[],"import './styles.css'\r\nimport {cambiar_color} from \"./DrawingCanvas\"\r\n\r\nconst Boton_Herramienta = (props) => {\r\n    return (\r\n        <button class=\"boton_imagen\" onClick= {props.onClick}>\r\n            <img class=\"imagen\" src={props.src} alt={props.alt} />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Boton_Herramienta","D:\\GitHub\\pizarrareact2.0\\src\\Boton_Figura.js",[],[],"D:\\GitHub\\pizarrareact2.0\\src\\Boton_Opcion.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":17},{"ruleId":"117","severity":1,"message":"121","line":2,"column":25,"nodeType":"119","messageId":"120","endLine":2,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"123","line":28,"column":11,"nodeType":"119","messageId":"120","endLine":28,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":45,"column":6,"nodeType":"126","endLine":45,"endColumn":8,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":55,"column":7,"nodeType":"119","messageId":"120","endLine":55,"endColumn":12},{"ruleId":"117","severity":1,"message":"129","line":116,"column":15,"nodeType":"119","messageId":"120","endLine":116,"endColumn":26},{"ruleId":"117","severity":1,"message":"130","line":128,"column":19,"nodeType":"119","messageId":"120","endLine":128,"endColumn":29},{"ruleId":"117","severity":1,"message":"130","line":135,"column":19,"nodeType":"119","messageId":"120","endLine":135,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":210,"column":24,"nodeType":"133","messageId":"134","endLine":210,"endColumn":33,"fix":"135"},{"ruleId":"117","severity":1,"message":"136","line":289,"column":9,"nodeType":"119","messageId":"120","endLine":289,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":312,"column":9,"nodeType":"139","messageId":"140","endLine":312,"endColumn":95},{"ruleId":"137","severity":1,"message":"141","line":331,"column":9,"nodeType":"139","messageId":"140","endLine":331,"endColumn":96},{"ruleId":"137","severity":1,"message":"142","line":334,"column":9,"nodeType":"139","messageId":"140","endLine":334,"endColumn":55},{"ruleId":"137","severity":1,"message":"143","line":337,"column":9,"nodeType":"139","messageId":"140","endLine":337,"endColumn":56},{"ruleId":"137","severity":1,"message":"144","line":340,"column":9,"nodeType":"139","messageId":"140","endLine":340,"endColumn":145},{"ruleId":"137","severity":1,"message":"145","line":343,"column":9,"nodeType":"139","messageId":"140","endLine":343,"endColumn":165},{"ruleId":"117","severity":1,"message":"146","line":1,"column":9,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"147","line":3,"column":9,"nodeType":"119","messageId":"120","endLine":3,"endColumn":22},{"ruleId":"137","severity":1,"message":"148","line":9,"column":13,"nodeType":"139","messageId":"140","endLine":9,"endColumn":114},{"ruleId":"137","severity":1,"message":"148","line":10,"column":13,"nodeType":"139","messageId":"140","endLine":10,"endColumn":116},{"ruleId":"137","severity":1,"message":"148","line":13,"column":13,"nodeType":"139","messageId":"140","endLine":13,"endColumn":120},{"ruleId":"137","severity":1,"message":"148","line":14,"column":13,"nodeType":"139","messageId":"140","endLine":14,"endColumn":120},{"ruleId":"117","severity":1,"message":"149","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":15},{"ruleId":"124","severity":1,"message":"150","line":47,"column":5,"nodeType":"126","endLine":47,"endColumn":43,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":9,"column":17,"nodeType":"139","messageId":"140","endLine":9,"endColumn":120},{"ruleId":"137","severity":1,"message":"152","line":10,"column":17,"nodeType":"139","messageId":"140","endLine":10,"endColumn":122},{"ruleId":"137","severity":1,"message":"153","line":7,"column":17,"nodeType":"139","messageId":"140","endLine":7,"endColumn":116},{"ruleId":"137","severity":1,"message":"153","line":8,"column":17,"nodeType":"139","messageId":"140","endLine":8,"endColumn":117},{"ruleId":"137","severity":1,"message":"153","line":9,"column":17,"nodeType":"139","messageId":"140","endLine":9,"endColumn":115},{"ruleId":"137","severity":1,"message":"154","line":22,"column":17,"nodeType":"139","messageId":"140","endLine":22,"endColumn":83},{"ruleId":"137","severity":1,"message":"154","line":23,"column":17,"nodeType":"139","messageId":"140","endLine":23,"endColumn":151},{"ruleId":"137","severity":1,"message":"154","line":24,"column":17,"nodeType":"139","messageId":"140","endLine":24,"endColumn":93},{"ruleId":"137","severity":1,"message":"154","line":8,"column":13,"nodeType":"139","messageId":"140","endLine":8,"endColumn":93},{"ruleId":"155","severity":1,"message":"156","line":9,"column":1,"nodeType":"157","endLine":35,"endColumn":2},{"ruleId":"117","severity":1,"message":"147","line":1,"column":9,"nodeType":"119","messageId":"120","endLine":1,"endColumn":22},{"ruleId":"117","severity":1,"message":"147","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","'subir_imagen' is defined but never used.","'obtenerId' is defined but never used.","'bd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'leerLienzos'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'idImg' is defined but never used.","'lienzoStore' is assigned a value but never used.","'requestAdd' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"159","text":"160"},"'actuImg' is defined but never used.","react/jsx-pascal-case","Imported JSX component Barra_CRUD must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Barra_Herramientas must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Colores must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Grosor must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Figuras must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Barra_Funciones must be in PascalCase or SCREAMING_SNAKE_CASE","'cambiar_grosor' is defined but never used.","'cambiar_color' is defined but never used.","Imported JSX component Boton_Color must be in PascalCase or SCREAMING_SNAKE_CASE","'click' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerHeight' aren't valid dependencies because mutating them doesn't re-render the component.",["161"],"Imported JSX component Boton_Herramienta must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Figura must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boton_Opcion must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"162","fix":"163"},[6996,6996],"()",{"desc":"164","fix":"165"},"Update the dependencies array to be: [leerLienzos]",{"range":"166","text":"167"},"Update the dependencies array to be: []",{"range":"168","text":"169"},[1248,1250],"[leerLienzos]",[1442,1480],"[]"]